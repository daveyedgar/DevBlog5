@using DevBlog5.Areas.Identity.Pages
@using DevBlog5.Areas.Identity.Pages.Account
@using DevBlog5.Areas.Identity.Pages.Account.Manage
@using DevBlog5.Services

@using DevBlog5.Models
@using Microsoft.AspNetCore.Identity


@inject SignInManager<BlogUser> SignInManager

@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}


<ul class="nav account">
    <li class="@ManageNavPages.IndexNavClass(ViewContext)"><a class="btn btn-actions" asp-page="./Index">Profile</a></li>
</ul>
<ul class="nav account">
    <li class="@ManageNavPages.EmailNavClass(ViewContext)"><a class="btn btn-actions" id="email" asp-page="./Email">Email</a></li>
</ul>
<ul class="nav account">
    <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a class="btn btn-actions" id="change-password" asp-page="./ChangePassword">Password</a></li>
    @if (hasExternalLogins)
    {
        <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a class="btn btn-actions" id="external-login" asp-page="./ExternalLogins">External logins</a></li>
    }
    <li class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"><a class="btn btn-actions" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>
    <li class="@ManageNavPages.PersonalDataNavClass(ViewContext)"><a class="btn btn-actions" asp-page="./PersonalData">Personal data</a></li>
</ul>
