@using DevBlog5.Models
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@using DevBlog5.Services
@using DevBlog5.ViewModels


@model IPagedList<Blog>
@inject IImageService _imageService

@{
    ViewData["Title"] = "Categories";
}

<h3 style="margin-top:0;">Categories</h3>


@*-----------------------------------------------------------------------------------------

        BLOG CARD                                                           BLOG CARD

-----------------------------------------------------------------------------------------*@

@foreach (var item in Model)
{
    <div class="card-container">
        <div class="cards">
            <div class="card-item row row-cols-2">
                <div class="card-image col-md-6 col-12">
                    <img src="@_imageService.DecodeImage(item.ImageData, item.ContentType)" />
                </div>
                <div class="card-info col-md-6 col-12">
                    <h2 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h2>
                    <p class="card-intro">@Html.DisplayFor(modelItem => item.Description)</p>
                    <p class="card-intro">Id: @Html.DisplayFor(modelItem => item.Id)</p>
                    <p class="card-intro">Date Created: @Html.DisplayFor(modelItem => item.Created)</p>
                    <p class="card-intro">Date Updated: @Html.DisplayFor(modelItem => item.Updated)</p>
                    <p class="card-intro">Posted by <b>@item.BlogUsers.FullName</b></p>
                </div>

            </div>
            <div class="row card-text">
                <div class="col">
                    <h4>Recent Posts</h4>
                    <p>How to seed Data.<span>In this post I will explain a simple way to...</span></p>
                    <p>How to seed Data.<span>In this post I will explain a simple way to...</span></p>
                    <p>How to seed Data.<span>In this post I will explain a simple way to...</span></p>
                </div>
            </div>
            <div class="row card-link">
                <div class="col">
                    <a id="routeId" class="btn btn-actions" asp-action="BlogPostIndex" asp-controller="Posts" asp-route-id="@item.Id">Read More...</a>
                </div>
            </div>
            @if (User.IsInRole("Administrator"))
            {
                <div class="row card-actions">
                    <div class="col">
                        <a asp-action="Edit" asp-controller="Blogs" asp-route-id="@item.Id"><img src="~/assets/images/pencil-fill.svg" style="width: 1.5rem;" /></a> &nbsp;&nbsp;
                        <a asp-action="Details" asp-controller="Blogs" asp-route-id="@item.Id"><img src="~/assets/images/eye-fill.svg" style="width: 2rem;" /></a> &nbsp;&nbsp;
                        <a asp-action="Delete" asp-controller="Blogs" asp-route-id="@item.Id"><img src="~/assets/images/trash3-fill.svg" style="width: 1.5rem;" /></a>
                    </div>
                </div>                
            }
        </div>
    </div>
}

<div class="left_content">

    @*pagination controls*@

    <div class="row">
        <div class="col">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </div>
    </div>
    <div class="row">
        <div class="col">
            @Html.PagedListPager(Model, page => Url.Action("Index", new {page = page}),
            new PagedListRenderOptionsBase
            {
                LiElementClasses = new string[] {"page-item"},
                PageClasses = new string[] {"page-link"}
            });
        </div>
    </div>

</div>
 @if (User.IsInRole("Administrator"))
{
<div>
    Page: @Model.PageNumber
    <br /><a asp-controller="Blogs" asp-action="Create" class="btn btn-actions">Create New Blog</a>
</div>
}