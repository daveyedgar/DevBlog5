@using DevBlog5.Services
@using DevBlog5.Models
@using DevBlog5.Helpers
@model IPagedList<DevBlog5.Models.Tag>
@inject IImageService _imageService
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@{
    ViewData["Title"] = "Posts For #" + ViewData["TagText"];

    var imageData = ViewData["PostImageData"] as byte[];
    var contentType = ViewData["PostImageType"] as string;
}

<h3 class="tag-item">
    Posts For <span>@ViewData["TagText"]</span> Tag
</h3>


@foreach (var item in Model)
{
    <div class="card-container">
        <div class="cards">
            <div class="card-item row row-cols-2">
                <div class="card-image col-md-6 col-12">
                    <img src="@_imageService.DecodeImage(item.Posts.ImageData, item.Posts.ContentType)" />
                </div>
                <div class="card-info col-md-6 col-12">
                    <h2 class="card-title">@Html.DisplayFor(modelItem => item.Posts.Title)</h2>
                    <p class="card-intro">@Html.DisplayFor(modelItem => item.Posts.Abstract)</p>
                    <p class="card-intro">Blog Name: @Html.DisplayFor(modelItem => item.Posts.Blog.Name); Blog Id: @Html.DisplayFor(modelItem => item.Posts.BlogId)</p>
                    <p class="card-intro">Date Created: @Html.DisplayFor(modelItem => item.Posts.Created)</p>
                    <p class="card-intro">Date Updated: @Html.DisplayFor(modelItem => item.Posts.Updated)</p>
                    <p class="card-intro">Status: @Html.DisplayFor(modelItem => item.Posts.ReadyStatus)</p>
                </div>

            </div>
            <div class="row card-text">
                <div class="post-limited">
                    @if (@item.Posts.Content.Length > 300)
                    {
                        <p>
                            @Html.Raw(HtmlSubstring.RemoveHtml(item.Posts.Content, 300))
                            <a class="btn btn-actions btn-sm" asp-action="Details" asp-route-slug="@item.Posts.Slug">Read More</a>
                        </p>
                    }
                    else
                    {
                        <p>
                            @Html.Raw(@item.Posts.Content)...
                            <a class="btn btn-actions btn-sm" asp-action="Details" asp-route-slug="@item.Posts.Slug">Read More</a>
                        </p>
                    }
                </div>
            </div>
            @if (User.IsInRole("Administrator"))
            {
                <div class="row card-actions">
                    <div class="col">
                        <a asp-action="Edit" asp-route-slug="@item.Posts.Slug"><img src="~/assets/images/pencil-fill.svg" style="width: 1.5rem;" /></a> &nbsp;&nbsp;
                        <a asp-action="Details" asp-route-slug="@item.Posts.Slug"><img src="~/assets/images/eye-fill.svg" style="width: 2rem;" /></a> &nbsp;&nbsp;
                        <a asp-action="Delete" asp-route-slug="@item.Posts.Slug"><img src="~/assets/images/trash3-fill.svg" style="width: 1.5rem;" /></a>
                    </div>
                </div>
            }
        </div>
    </div>
}



<hr />
@*pagination controls*@
<div class="pagination">
    <div class="row">
        <div class="col">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </div>
    </div>
    <div class="row">
        <div class="col">
            @Html.PagedListPager(Model, page => Url.Action("TagPostIndex", new {id = Model.FirstOrDefault().PostId, page = page}),
            new PagedListRenderOptionsBase
            {
            LiElementClasses = new string[] {"page-item"},
            PageClasses = new string[] {"page-link"}
            })
        </div>
    </div>
</div>

<div style="margin-bottom:2rem;">
    <a onclick="javascript:history.back()"><img src="~/assets/images/skip-backward-fill.svg" style="width: 2rem;" /></a>
</div>

@if (User.IsInRole("Administrator"))
{
    <p>
        <a id="link" asp-action="Create" class="btn btn-actions" asp-route-id="@ViewData["BlogId"]" asp-route-blogName="@ViewData["BlogName"]">Create New Post for @ViewData["BlogName"] Blog</a>

        <br>BlogId: @ViewData["BlogId"]<br />
        <br>Page: @Model.PageNumber
    </p>
}
@section Scripts{

    <script>
        function openSuccessModal(strMessage) {
            var myDiv = document.getElementById("MyModalSuccessAlertBody");
            myDiv.innerHTML = strMessage;
            $("#myModalSuccess").modal("show");
        }

        $(document).ready(function () {
            var msg = "@TempData["SuccessMessage"]";
            if (msg)
                openSuccessModal(msg);

        });
    </script>
    }
